/**
 * githubstats API
 * ## Version [V3]  Generate Github statistics on:  * number of commits  * number of stars  * Aggregated activity  for GitHub projects aggregated by US States
 *
 * OpenAPI spec version: 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.2.3
 *
 * Do not edit the class manually.
 *
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'Configuration', 'model/GetAllStats', 'model/GetStatsByState', 'model/Status', 'api/HealthcheckApi', 'api/StatsApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./Configuration'), require('./model/GetAllStats'), require('./model/GetStatsByState'), require('./model/Status'), require('./api/HealthcheckApi'), require('./api/StatsApi'),require('./api/HistoryApi'));
  }
}(function(ApiClient, Configuration, GetAllStats, GetStatsByState, Status, HealthcheckApi, StatsApi, HistoryApi) {
  'use strict';

  /**
   * _Version__V2Generate_Github_statistics_on_number_of_commits_number_of_stars_Aggregated_activityfor_GitHub_projects_aggregated_by_US_States.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var GithubstatsApi = require('index'); // See note below*.
   * var xxxSvc = new GithubstatsApi.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new GithubstatsApi.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new GithubstatsApi.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new GithubstatsApi.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version 1.0.0
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The Configuration constructor.
     * @property {module:Configuration}
     */
    Configuration: Configuration,    
    /**
     * The GetAllStats model constructor.
     * @property {module:model/GetAllStats}
     */
    GetAllStats: GetAllStats,    
    /**
     * The GetStatsByState model constructor.
     * @property {module:model/GetStatsByState}
     */
    GetStatsByState: GetStatsByState,    
    /**
     * The Status model constructor.
     * @property {module:model/Status}
     */
    Status: Status,
    /**
     * The HealthcheckApi service constructor.
     * @property {module:api/HealthcheckApi}
     */
    HealthcheckApi: HealthcheckApi,
    /**
     * The StatsApi service constructor.
     * @property {module:api/StatsApi}
     */
    StatsApi: StatsApi,
    /**
     * The StatsApi service constructor.
     * @property {module:api/HistoryApi}
     */
    HistoryApi: HistoryApi
  };

  return exports;
}));
