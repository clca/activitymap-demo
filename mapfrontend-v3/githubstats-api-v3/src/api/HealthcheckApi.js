/**
 * githubstats API
 * ## Version [V3]  Generate Github statistics on:  * number of commits  * number of stars  * Aggregated activity  for GitHub projects aggregated by US States
 *
 * OpenAPI spec version: 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.2.3
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.GithubstatsApi) {
      root.GithubstatsApi = {};
    }
    root.GithubstatsApi.HealthcheckApi = factory(root.GithubstatsApi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';

  /**
   * Healthcheck service.
   * @module api/HealthcheckApi
   * @version 1.0.0
   */

  /**
   * Constructs a new HealthcheckApi. 
   * @alias module:api/HealthcheckApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the githubstatsStatusGet operation.
     * @callback module:api/HealthcheckApi~githubstatsStatusGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve Service&#39;s liveness
     * 
     * @param {module:api/HealthcheckApi~githubstatsStatusGetCallback} callback The callback function, accepting three arguments: error, data, response
     * @param {Object|undefined} additionalHeaders key / value pairs of additional headers to put into request.
     */
    this.githubstatsStatusGet = function(callback, additionalHeaders) {
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      if (additionalHeaders !== undefined) {
        for (var key in additionalHeaders) {
          if (additionalHeaders.hasOwnProperty(key)) {
            headerParams[key] = additionalHeaders[key];
          }
        }
      }
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = ['text/plain'];
      var returnType = null;

      return this.apiClient.callApi(
        '/githubstats/status', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
